set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
"Plugin 'Valloric/YouCompleteMe'

Plugin 'davidhalter/jedi-vim'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'

Plugin 'scrooloose/nerdtree'
Plugin 'bling/vim-airline'
Plugin 'kien/ctrlp.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


"""""""""""""BASE CONFIG"""""""""""""""""""""""
"Status bar configuration
set laststatus=2

" Open syntax highlighting
syntax enable

" Turn on grammar detection
syntax on

"vimrc file modified automatically loaded
autocmd! bufwritepost .vimrc source %

" After the file is modified automatically loaded
set autoread

" Highlight search hit text
set hlsearch

" As you type in an instant search
set incsearch

" Ignored case when searching
set ignorecase

" One or more uppercase letters are still case sensitive
set smartcase

" set guifont=Menlo:h14

" colorscheme Tomorrow-Night-Bright
" Use comes with color
"colorscheme elflord
"set background=dark

" The status bar shows the command being input
set showcmd

" visual autocomplete for command menu
set wildmenu

" redraw only when we need to.
set lazyredraw

" Shows the pairing of brackets
set showmatch

" :next,: make command is automatically saved before
set autowrite

" Allowed to use the mouse
set mouse=a

" Set the line number
set nu

" Backspace available
set backspace=2

" Backspace once deleted 4 spaces
set smarttab

" Indent
set autoindent
set smartindent

" Save the file automatically delete the end of the line space or Tab
autocmd BufWritePre * :%s/\s\+$//e

"The empty line at the end is automatically deleted when saving the file
autocmd BufWritePre * :%s/^$\n\+\%$//ge

" Fill Tab
set expandtab
set tabstop=4
set shiftwidth=4
set shiftround

" The code collapse cursor collapses or expands with the za command when indented below
set fdm=indent
" Expand by default
set foldlevel=99

" Highlight the current row, column
set cursorline
"set cursorcolumn

" After setting exit vim, the content is displayed on the terminal screen and
" can be used for viewing and copying
set t_ti= t_te=

" 打开文件时始终跳转到上次光标所在位置
autocmd BufReadPost *
      \ if ! exists("g:leave_my_cursor_position_alone") |
      \     if line("'\"") > 0 && line ("'\"") <= line("$") |
      \         exe "normal g'\"" |
      \     endif |
      \ endif



""""""""""""""""""""""""""""""PLUGIN CONFIG""""""""""""""""""""""""""
" NERDTREE
map <F2> :NERDTreeToggle<CR>
let NERDTreeIgnore=['\.pyc$', '\~$']
" show nerdtree when starts up
" autocmd vimenter * NERDTree
 autocmd bufenter * if (winnr("$") == 1 && exists('b:NERDTreeType') && b:NERDTreeType == 'primary') | q | endif

" CtrlP
let g:ctrlp_show_hidden = 1
let g:ctrlp_cmd = 'CtrlPMixed'

" jedi
autocmd FileType python setlocal completeopt-=preview
let g:jedi#completions_command = "<C-n>"

" ultisnips
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
